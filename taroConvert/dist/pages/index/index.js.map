{"version":3,"file":"pages/index/index.js","sources":["webpack:///./src/pages/index/index.js","webpack:///./src/pages/index/index.js?1f27","webpack:///./src/pages/index/index.scss"],"sourcesContent":["import { Block, View, Button, Image, Text } from '@tarojs/components'\nimport React from 'react'\nimport Taro from '@tarojs/taro'\nimport withWeapp from '@tarojs/with-weapp'\nimport './index.scss'\n// index.js\n// 获取应用实例\nconst app = Taro.getApp()\n\n@withWeapp({\n  data: {\n    motto: 'Hello World',\n    userInfo: {},\n    hasUserInfo: false,\n    canIUse: Taro.canIUse('button.open-type.getUserInfo')\n  },\n  // 事件处理函数\n  bindViewTap() {\n    Taro.navigateTo({\n      url: '../logs/logs'\n    })\n  },\n  onLoad() {\n    if (app.globalData.userInfo) {\n      this.setData({\n        userInfo: app.globalData.userInfo,\n        hasUserInfo: true\n      })\n    } else if (this.data.canIUse) {\n      // 由于 getUserInfo 是网络请求，可能会在 Page.onLoad 之后才返回\n      // 所以此处加入 callback 以防止这种情况\n      app.userInfoReadyCallback = res => {\n        this.setData({\n          userInfo: res.userInfo,\n          hasUserInfo: true\n        })\n      }\n    } else {\n      // 在没有 open-type=getUserInfo 版本的兼容处理\n      Taro.getUserInfo({\n        success: res => {\n          app.globalData.userInfo = res.userInfo\n          this.setData({\n            userInfo: res.userInfo,\n            hasUserInfo: true\n          })\n        }\n      })\n    }\n  },\n  getUserInfo(e) {\n    console.log(e)\n    app.globalData.userInfo = e.detail.userInfo\n    this.setData({\n      userInfo: e.detail.userInfo,\n      hasUserInfo: true\n    })\n  }\n})\nclass _C extends React.Component {\n  render() {\n    const { hasUserInfo, canIUse, userInfo, motto } = this.data\n    return (\n      <View className=\"container\">\n        <View className=\"userinfo\">\n          {!hasUserInfo && canIUse ? (\n            <Button openType=\"getUserInfo\" onGetuserinfo={this.getUserInfo}>\n              获取头像昵称\n            </Button>\n          ) : (\n            <Block>\n              <Image\n                onClick={this.bindViewTap}\n                className=\"userinfo-avatar\"\n                src={userInfo.avatarUrl}\n                mode=\"cover\"\n              ></Image>\n              <Text className=\"userinfo-nickname\">{userInfo.nickName}</Text>\n            </Block>\n          )}\n        </View>\n        <View className=\"usermotto\">\n          <Text className=\"user-motto\">{motto}</Text>\n        </View>\n      </View>\n    )\n  }\n}\n\nexport default _C\n","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../node_modules/@tarojs/mini-runner/node_modules/babel-loader/lib/index.js!./index.js\"\nvar config = {};\n\n\nvar inst = Page(createPageConfig(component, 'pages/index/index', {root:{cn:[]}}, config || {}))\n\n","// extracted by mini-css-extract-plugin"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AAAA;AACA;AAmDA;AAjDA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AADA;AATA;AAaA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AAHA;AAUA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AAPA;AASA;AAvCA;AAyCA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAhDA;;;;;;;;;;;;;AAmDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAIA;AAEA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAPA;AANA;AAiBA;AAAA;AACA;AAAA;AAAA;AADA;AAlBA;AAuBA;;;;AA3BA;AACA;AA6BA;;;;;;;;;;;;;ACzFA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACNA;;;;A","sourceRoot":""}